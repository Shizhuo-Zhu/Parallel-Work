{"ast":null,"code":"var _jsxFileName = \"/Users/shizhuo/Desktop/GCP/frontend/src/ResourceTable.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ResourceTable = () => {\n//   const [resources, setResources] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const apiUrl = process.env.REACT_APP_BACKEND_URL + '/api/resources';\n\n//     // Fetch data from the backend\n//     axios.get(apiUrl)\n//       .then(response => {\n//         setResources(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         setError('Failed to fetch resources');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Name</th>\n//           <th>Region</th>\n//           <th>Type</th> \n//           <th>Status</th>\n//           <th>IP</th>\n//           <th>Created Time</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {resources.map(resource => (\n//           <tr key={resource.name}>\n//             <td>{resource.name}</td>\n//             <td>{resource.zone}</td>\n//             <td>{resource.type}</td> \n//             <td>{resource.status || 'N/A'}</td>\n//             <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n//             <td>{resource.creationTimestamp || 'N/A'}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default ResourceTable;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResourceTable = () => {\n  _s();\n  const [resources, setResources] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [resourceID, setResourceID] = useState(''); // State to hold the resource ID input\n\n  // Function to fetch all resources\n  const fetchAllResources = () => {\n    const apiUrl = 'http://localhost:8080/api/resources'; // Adjust the URL to your backend\n    axios.get(apiUrl).then(response => {\n      setResources(response.data);\n      setLoading(false);\n    }).catch(error => {\n      setError('Failed to fetch resources');\n      setLoading(false);\n    });\n  };\n\n  // Function to fetch a specific resource by ID\n  const fetchResourceByID = id => {\n    const apiUrl = `http://localhost:8080/api/resources/${id}`; // Adjust the URL to your backend\n    axios.get(apiUrl).then(response => {\n      setResources([response.data]); // Set the response as the only resource in the list\n      setLoading(false);\n    }).catch(error => {\n      setError('Failed to fetch resource by ID');\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    // Fetch all resources initially\n    fetchAllResources();\n  }, []);\n  const handleIDChange = event => {\n    setResourceID(event.target.value); // Update the resource ID as the user types\n  };\n  const handleFetchByID = () => {\n    if (resourceID) {\n      setLoading(true); // Set loading state\n      fetchResourceByID(resourceID); // Fetch the resource by ID\n    } else {\n      setError('Please enter a valid resource ID');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: resourceID,\n        onChange: handleIDChange,\n        placeholder: \"Enter Resource ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFetchByID,\n        children: \"Fetch Resource by ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.zone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.status || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.creationTimestamp || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, resource.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ResourceTable, \"zN18xh95qoW8l4EV3Zg8i64PqD8=\");\n_c = ResourceTable;\nexport default ResourceTable;\nvar _c;\n$RefreshReg$(_c, \"ResourceTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResourceTable","_s","resources","setResources","loading","setLoading","error","setError","resourceID","setResourceID","fetchAllResources","apiUrl","get","then","response","data","catch","fetchResourceByID","id","handleIDChange","event","target","value","handleFetchByID","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","resource","name","zone","status","ipAddresses","length","join","creationTimestamp","_c","$RefreshReg$"],"sources":["/Users/shizhuo/Desktop/GCP/frontend/src/ResourceTable.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ResourceTable = () => {\n//   const [resources, setResources] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const apiUrl = process.env.REACT_APP_BACKEND_URL + '/api/resources';\n\n//     // Fetch data from the backend\n//     axios.get(apiUrl)\n//       .then(response => {\n//         setResources(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         setError('Failed to fetch resources');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Name</th>\n//           <th>Region</th>\n//           <th>Type</th> \n//           <th>Status</th>\n//           <th>IP</th>\n//           <th>Created Time</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {resources.map(resource => (\n//           <tr key={resource.name}>\n//             <td>{resource.name}</td>\n//             <td>{resource.zone}</td>\n//             <td>{resource.type}</td> \n//             <td>{resource.status || 'N/A'}</td>\n//             <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n//             <td>{resource.creationTimestamp || 'N/A'}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default ResourceTable;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceTable = () => {\n  const [resources, setResources] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [resourceID, setResourceID] = useState(''); // State to hold the resource ID input\n\n  // Function to fetch all resources\n  const fetchAllResources = () => {\n    const apiUrl = 'http://localhost:8080/api/resources'; // Adjust the URL to your backend\n    axios.get(apiUrl)\n      .then(response => {\n        setResources(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError('Failed to fetch resources');\n        setLoading(false);\n      });\n  };\n\n  // Function to fetch a specific resource by ID\n  const fetchResourceByID = (id) => {\n    const apiUrl = `http://localhost:8080/api/resources/${id}`; // Adjust the URL to your backend\n    axios.get(apiUrl)\n      .then(response => {\n        setResources([response.data]); // Set the response as the only resource in the list\n        setLoading(false);\n      })\n      .catch(error => {\n        setError('Failed to fetch resource by ID');\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    // Fetch all resources initially\n    fetchAllResources();\n  }, []);\n\n  const handleIDChange = (event) => {\n    setResourceID(event.target.value); // Update the resource ID as the user types\n  };\n\n  const handleFetchByID = () => {\n    if (resourceID) {\n      setLoading(true); // Set loading state\n      fetchResourceByID(resourceID); // Fetch the resource by ID\n    } else {\n      setError('Please enter a valid resource ID');\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      {/* Input and button to fetch a resource by ID */}\n      <div>\n        <input\n          type=\"text\"\n          value={resourceID}\n          onChange={handleIDChange}\n          placeholder=\"Enter Resource ID\"\n        />\n        <button onClick={handleFetchByID}>Fetch Resource by ID</button>\n      </div>\n\n      {/* Table to display the resources */}\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Region</th>\n            <th>Type</th> \n            <th>Status</th>\n            <th>IP</th>\n            <th>Created Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {resources.map(resource => (\n            <tr key={resource.name}>\n              <td>{resource.name}</td>\n              <td>{resource.zone}</td>\n              <td>{resource.type}</td> \n              <td>{resource.status || 'N/A'}</td>\n              <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n              <td>{resource.creationTimestamp || 'N/A'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ResourceTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}