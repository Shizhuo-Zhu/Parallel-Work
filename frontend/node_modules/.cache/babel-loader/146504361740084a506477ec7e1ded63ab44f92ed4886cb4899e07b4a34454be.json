{"ast":null,"code":"var _jsxFileName = \"/Users/shizhuo/Desktop/GCP/frontend/src/ResourceTable.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ResourceTable = () => {\n//   const [resources, setResources] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const apiUrl = process.env.REACT_APP_BACKEND_URL + '/api/resources';\n\n//     // Fetch data from the backend\n//     axios.get('/api/resources')\n//       .then(response => {\n//         setResources(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         setError('Failed to fetch resources');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Name</th>\n//           <th>Region</th>\n//           <th>Type</th> \n//           <th>Status</th>\n//           <th>IP</th>\n//           <th>Created Time</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {resources.map(resource => (\n//           <tr key={resource.name}>\n//             <td>{resource.name}</td>\n//             <td>{resource.zone}</td>\n//             <td>{resource.type}</td> \n//             <td>{resource.status || 'N/A'}</td>\n//             <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n//             <td>{resource.creationTimestamp || 'N/A'}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default ResourceTable;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResourceTable = () => {\n  _s();\n  const [resources, setResources] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [instanceId, setInstanceId] = useState(\"\"); // Optionally set instanceId dynamically\n\n  useEffect(() => {\n    let apiUrl;\n\n    // Check if an instance ID is set and fetch accordingly\n    if (instanceId) {\n      apiUrl = `http://localhost:8080/api/resources/${instanceId}`;\n    } else {\n      apiUrl = \"http://localhost:8080/api/resources\"; // fetch all resources\n    }\n    console.log(\"API URL: \", apiUrl); // Log to verify the correct URL\n\n    // Make an API call to the backend\n    axios.get(apiUrl).then(response => {\n      if (response.data) {\n        // If we're fetching a single resource, wrap it in an array\n        const resourceData = Array.isArray(response.data) ? response.data : [response.data];\n        setResources(resourceData); // Set the resources state to the data we received\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setError('Failed to fetch resources');\n      setLoading(false);\n    });\n  }, [instanceId]); // Only run when instanceId changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter instance ID\",\n      value: instanceId,\n      onChange: e => setInstanceId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: resources.map(resource => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.zone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.status || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: resource.creationTimestamp || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, resource.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ResourceTable, \"R+peKwfDpzsN8nRdayug87KXfqQ=\");\n_c = ResourceTable;\nexport default ResourceTable;\nvar _c;\n$RefreshReg$(_c, \"ResourceTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResourceTable","_s","resources","setResources","loading","setLoading","error","setError","instanceId","setInstanceId","apiUrl","console","log","get","then","response","data","resourceData","Array","isArray","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","resource","name","zone","status","ipAddresses","length","join","creationTimestamp","_c","$RefreshReg$"],"sources":["/Users/shizhuo/Desktop/GCP/frontend/src/ResourceTable.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ResourceTable = () => {\n//   const [resources, setResources] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const apiUrl = process.env.REACT_APP_BACKEND_URL + '/api/resources';\n\n//     // Fetch data from the backend\n//     axios.get('/api/resources')\n//       .then(response => {\n//         setResources(response.data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         setError('Failed to fetch resources');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Name</th>\n//           <th>Region</th>\n//           <th>Type</th> \n//           <th>Status</th>\n//           <th>IP</th>\n//           <th>Created Time</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {resources.map(resource => (\n//           <tr key={resource.name}>\n//             <td>{resource.name}</td>\n//             <td>{resource.zone}</td>\n//             <td>{resource.type}</td> \n//             <td>{resource.status || 'N/A'}</td>\n//             <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n//             <td>{resource.creationTimestamp || 'N/A'}</td>\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default ResourceTable;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceTable = () => {\n  const [resources, setResources] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [instanceId, setInstanceId] = useState(\"\"); // Optionally set instanceId dynamically\n\n  useEffect(() => {\n    let apiUrl;\n\n    // Check if an instance ID is set and fetch accordingly\n    if (instanceId) {\n      apiUrl = `http://localhost:8080/api/resources/${instanceId}`;\n    } else {\n      apiUrl = \"http://localhost:8080/api/resources\"; // fetch all resources\n    }\n\n    console.log(\"API URL: \", apiUrl); // Log to verify the correct URL\n\n    // Make an API call to the backend\n    axios.get(apiUrl)\n      .then(response => {\n        if (response.data) {\n          // If we're fetching a single resource, wrap it in an array\n          const resourceData = Array.isArray(response.data) ? response.data : [response.data];\n          setResources(resourceData); // Set the resources state to the data we received\n        }\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Error fetching data:\", error);\n        setError('Failed to fetch resources');\n        setLoading(false);\n      });\n  }, [instanceId]); // Only run when instanceId changes\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      {/* Input field to search by instance ID */}\n      <input \n        type=\"text\"\n        placeholder=\"Enter instance ID\"\n        value={instanceId}\n        onChange={e => setInstanceId(e.target.value)} \n      />\n\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Region</th>\n            <th>Type</th>\n            <th>Status</th>\n            <th>IP</th>\n            <th>Created Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {resources.map(resource => (\n            <tr key={resource.name}>\n              <td>{resource.name}</td>\n              <td>{resource.zone}</td>\n              <td>{resource.type}</td>\n              <td>{resource.status || 'N/A'}</td>\n              <td>{resource.ipAddresses && resource.ipAddresses.length > 0 ? resource.ipAddresses.join(', ') : 'N/A'}</td>\n              <td>{resource.creationTimestamp || 'N/A'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ResourceTable;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}